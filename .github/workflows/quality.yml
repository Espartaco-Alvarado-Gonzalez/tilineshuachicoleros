name: quality
on:
  push: { branches: [ main, review/** ] }
  pull_request: { branches: [ main ] }

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Install tooling
        run: |
          python -m pip install --upgrade pip
          pip install black isort ruff mypy bandit pip-audit pytest coverage
      - name: Detect layout
        id: detect
        run: |
          if [ -f pyproject.toml ]; then echo "has_py=true"  >> $GITHUB_OUTPUT; else echo "has_py=false"  >> $GITHUB_OUTPUT; fi
          if [ -d src ];             then echo "has_src=true" >> $GITHUB_OUTPUT; else echo "has_src=false" >> $GITHUB_OUTPUT; fi
          if git ls-files 'tests/**/*.py' >/dev/null 2>&1 && [ -n "$(git ls-files 'tests/**/*.py')" ]; then
            echo "has_tests=true" >> $GITHUB_OUTPUT
          else
            echo "has_tests=false" >> $GITHUB_OUTPUT
          fi
      - name: Install project (editable)
        if: steps.detect.outputs.has_py == 'true'
        run: pip install -e .
      - name: Ruff
        run: |
          if [ -d src ]; then ruff check src; else ruff check .; fi
      - name: Black
        run: black --check .
      - name: isort
        run: isort --check-only .
      - name: mypy (if src/)
        if: steps.detect.outputs.has_src == 'true'
        run: mypy src
      - name: Security (soft fail)
        run: |
          bandit -r src -q || true
          pip-audit -q   || true
      - name: Tests + Coverage (if tests/)
        if: steps.detect.outputs.has_tests == 'true'
        run: |
          coverage run -m pytest -q
          coverage report --fail-under=60
